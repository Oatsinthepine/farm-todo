from pydantic import BaseModel
from typing import Optional

class ToDo(BaseModel):
    """
    This is the model for a To-Do item.
    """
    id: Optional[str] = None  # must set this to Optional with None as default, as when POST, no id will be provided, id is generated by MongoDB
    title: str
    description: str


class ToDoResponse(BaseModel):
    """
    This is the response model for a To-Do item, which includes a message and the To-Do item.
    so when returning in the path operation function, we expect the form is: ToDoResponse(message, to_do).
    """
    message: str
    to_do: ToDo

class ToDoUpdate(BaseModel):
    """
    This is the model for updating a To-Do item using pydantic model for request body.
    used to receive data from the request body via frontend PUT request.
    usecase: frontend/src/App.jsx, updateTaskHandler function will send a PUT request contains request body, by using this model on responses_model in the path operation decorator,
    it will automatically validate and convert the request body against the model.
    """
    title: str
    description: str